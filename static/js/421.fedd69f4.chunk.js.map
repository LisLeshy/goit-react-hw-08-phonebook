{"version":3,"file":"static/js/421.fedd69f4.chunk.js","mappings":"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","sources":["redux/selectors.js","components/DynamicSort/DynamicSort.jsx","components/ContactForms/ContactForm.js","components/ContactForms/ContactForms.jsx","components/Filter/Filter.jsx","components/ContactList/ContactList.jsx","components/App.jsx","pages/Contacts.js","../node_modules/prop-types/factoryWithThrowingShims.js","../node_modules/prop-types/index.js","../node_modules/prop-types/lib/ReactPropTypesSecret.js"],"sourcesContent":["export const getContacts = state => state.contacts.items;\n\nexport const getError = state => state.contacts.error;\n\nexport const getStatusFilter = state => state.filters;\n\nexport const getIsLoading = state => state.contacts.isLoading;\n","import propTypes from 'prop-types';\n\nfunction DynamicSort(property) {\n    return function (a,b) {\n          const result = (a[property].toUpperCase() < b[property].toUpperCase()) ? -1 : (a[property] > b[property]) ? 1 : 0;\n          return result;\n    }\n  }\n  export default DynamicSort\n\n    DynamicSort.propTypes = {\n      property: propTypes.string\n  }","import styled from '@emotion/styled';\n\nexport const FormContainer = styled.div`\n  margin-top: 100px;\n`;\n\nexport const Label = styled.label`\n  display: flex;\n  flex-direction: column;\n  margin-bottom: 20px;\n`;\n\nexport const Title = styled.span`\n  font-weight: 600;\n  color: var(--main-text-color);\n  margin-bottom: 5px;\n`;\n\nexport const Input = styled.input`\n  height: 40px;\n  margin-top: 10px;\n  padding: 0 10px 0 10px;\n  outline: none;\n  border: 1px solid var(--second-bg-color);\n  border-radius: 8px;\n  outline: none;\n  color: var(--main-text-color);\n  font-size: 14px;\n  :focus {\n    border-color: var(--accent-bg-color);\n  }\n  ::placeholder {\n    font-size: 12px;\n    color: var(--main-text-color);\n  }\n`;\n\nexport const Button = styled.button`\n    width: 100px;\n  height: 40px;\n  margin-left: 30px;\n  margin-top: 15px;\n  margin-bottom: 15px;\n  background-color: var(--accent-bg-color);\n  color: var(--second-text-color);\n  font-size: 16px;\n  border: none;\n  border-radius: 8px;\n  cursor: pointer;\n  transition: background-color var(--main-hover-animation);\n  :hover,\n  :focus {\n    background-color: var(--second-bg-color);\n  }\n  }\n`;\n","import { useState } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { addContact } from '../../redux/operations';\nimport { getContacts } from '../../redux/selectors';\nimport DynamicSort from 'components/DynamicSort/DynamicSort';\nimport { Label, Input, Button, Title, FormContainer } from './ContactForm';\n\nfunction ContactForm() {\n  const [initial_state, setInitial_state] = useState({\n    name: '',\n    phone: '',\n  });\n  const contacts = [...useSelector(getContacts)].sort(DynamicSort('name'));\n  const dispatch = useDispatch();\n\n  function handleChangeForm(event) {\n    const { name, value } = event.target;\n    return setInitial_state(initial_state => ({\n      ...initial_state,\n      [name]: value,\n    }));\n  }\n\n  function handleFormSubmit(event) {\n    event.preventDefault();\n    const isValidateForm = validateForm();\n    if (isValidateForm) {\n      let newContact = {\n        name: initial_state.name,\n        number: initial_state.phone,\n      };\n      resetForm();\n      dispatch(addContact(newContact));\n    }\n  }\n\n  function validateForm() {\n    if (!initial_state.name || !initial_state.phone) {\n      alert('Some field is empty');\n      return false;\n    } else if (\n      [...contacts].filter(key => key.name === initial_state.name).length > 0\n    ) {\n      alert('contact already exist');\n      return false;\n    } else return true;\n  }\n\n  function resetForm() {\n    setInitial_state(initial_state => ({\n      name: '',\n      phone: '',\n    }));\n  }\n  return (\n    <form onSubmit={handleFormSubmit}>\n      <FormContainer>\n        <Label>\n          <Title>Name</Title>\n\n          <Input\n            type=\"text\"\n            name=\"name\"\n            pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n            title=\"Name may contain only letters, apostrophe, dash and spaces. For example Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan\"\n            value={initial_state.name}\n            onChange={handleChangeForm}\n            required\n          />\n        </Label>\n        <Label>\n          <Title>Phone</Title>\n\n          <Input\n            type=\"tel\"\n            name=\"phone\"\n            pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\n            title=\"Phone number must be digits and can contain spaces, dashes, parentheses and can start with +\"\n            value={initial_state.phone}\n            onChange={handleChangeForm}\n            required\n          />\n        </Label>\n        <Button type=\"submit\">Add contact</Button>\n      </FormContainer>\n    </form>\n  );\n}\n\nexport default ContactForm;\n","import { useSelector, useDispatch } from 'react-redux';\nimport { setFilter } from '../../redux/filterSlice';\nimport { Input } from 'components/ContactForms/ContactForm';\n\nconst Filter = () => {\n  const filter = useSelector(state => state.filters);\n  const dispatch = useDispatch();\n  function handleFilterChange(filter) {\n    dispatch(setFilter(filter));\n  }\n\n  return (\n    <Input\n      type=\"text\"\n      name=\"filter\"\n      value={filter}\n      onChange={({ target }) => handleFilterChange(target.value)}\n      placeholder=\"Enter info for seach\"\n    />\n  );\n};\n\nexport default Filter;\n","import { useSelector, useDispatch } from 'react-redux';\nimport { useEffect } from 'react';\nimport { fetchContacts, deleteContact } from 'redux/operations';\nimport { getStatusFilter, getContacts } from '../../redux/selectors';\nimport DynamicSort from '../DynamicSort/DynamicSort';\nimport Filter from '../Filter/Filter';\nimport { Title } from 'components/ContactForms/ContactForm';\nimport propTypes from 'prop-types';\n\nconst ContactListItem = ({ id, name, number, onRemove }) => {\n  return (\n    <li>\n      {name}: {number} <button onClick={() => onRemove(id)}>Delete</button>\n    </li>\n  );\n};\n\nconst ContactList = () => {\n  const contacts = [...useSelector(getContacts)].sort(DynamicSort('name'));\n  const filter = useSelector(getStatusFilter);\n  const dispatch = useDispatch();\n\n  useEffect(() => {\n    dispatch(fetchContacts());\n  }, [dispatch]);\n\n  function handleRemoveContact(event) {\n    return dispatch(deleteContact(event));\n  }\n\n  function getVisibleContacts() {\n    return contacts.filter(contact =>\n      contact.name.toLowerCase().includes(filter.toLowerCase())\n    );\n  }\n\n  const visibleContacts = getVisibleContacts();\n  if (contacts.length === 0) {\n    return null;\n  }\n  return (\n    <div>\n      <>\n        <Title style={{ marginLeft: '20px' }}>\n          Find contact: {visibleContacts.length}\n        </Title>\n        <br></br>\n        <Filter />\n        <ul style={{ marginTop: '20px' }}>\n          {visibleContacts.map(contact => (\n            <ContactListItem\n              {...contact}\n              onRemove={handleRemoveContact}\n              key={contact.id}\n            />\n          ))}\n        </ul>\n      </>\n    </div>\n  );\n};\n\nexport default ContactList;\n\nContactListItem.propTypes = {\n  id: propTypes.string,\n  name: propTypes.string,\n  phone: propTypes.string,\n  onRemove: propTypes.func,\n};\n","import { useDispatch } from 'react-redux';\nimport { useEffect } from 'react';\nimport { fetchContacts } from 'redux/operations';\nimport { refreshUser } from '../redux/auth/operations';\nimport ContactForm from './ContactForms/ContactForms';\nimport ContactList from './ContactList/ContactList';\n\nexport default function App() {\n  const dispatch = useDispatch();\n\n  useEffect(() => {\n    dispatch(fetchContacts());\n  }, [dispatch]);\n\n  useEffect(() => {\n    dispatch(refreshUser());\n  }, [dispatch]);\n\n  return (\n    <div>\n      <ContactForm />\n      <div\n        style={{\n          display: 'flex',\n          minWidth: 555,\n          justifyContent: 'center',\n          alignItems: 'center',\n          fontSize: 20,\n        }}\n      >\n        <ContactList />\n      </div>\n    </div>\n  );\n}\n","import App from '../components/App';\n\nexport default function Contacts() {\n  return (\n    <>\n      <App />\n    </>\n  );\n}\n","/**\n * Copyright (c) 2013-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\n'use strict';\n\nvar ReactPropTypesSecret = require('./lib/ReactPropTypesSecret');\n\nfunction emptyFunction() {}\nfunction emptyFunctionWithReset() {}\nemptyFunctionWithReset.resetWarningCache = emptyFunction;\n\nmodule.exports = function() {\n  function shim(props, propName, componentName, location, propFullName, secret) {\n    if (secret === ReactPropTypesSecret) {\n      // It is still safe when called from React.\n      return;\n    }\n    var err = new Error(\n      'Calling PropTypes validators directly is not supported by the `prop-types` package. ' +\n      'Use PropTypes.checkPropTypes() to call them. ' +\n      'Read more at http://fb.me/use-check-prop-types'\n    );\n    err.name = 'Invariant Violation';\n    throw err;\n  };\n  shim.isRequired = shim;\n  function getShim() {\n    return shim;\n  };\n  // Important!\n  // Keep this list in sync with production version in `./factoryWithTypeCheckers.js`.\n  var ReactPropTypes = {\n    array: shim,\n    bigint: shim,\n    bool: shim,\n    func: shim,\n    number: shim,\n    object: shim,\n    string: shim,\n    symbol: shim,\n\n    any: shim,\n    arrayOf: getShim,\n    element: shim,\n    elementType: shim,\n    instanceOf: getShim,\n    node: shim,\n    objectOf: getShim,\n    oneOf: getShim,\n    oneOfType: getShim,\n    shape: getShim,\n    exact: getShim,\n\n    checkPropTypes: emptyFunctionWithReset,\n    resetWarningCache: emptyFunction\n  };\n\n  ReactPropTypes.PropTypes = ReactPropTypes;\n\n  return ReactPropTypes;\n};\n","/**\n * Copyright (c) 2013-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nif (process.env.NODE_ENV !== 'production') {\n  var ReactIs = require('react-is');\n\n  // By explicitly using `prop-types` you are opting into new development behavior.\n  // http://fb.me/prop-types-in-prod\n  var throwOnDirectAccess = true;\n  module.exports = require('./factoryWithTypeCheckers')(ReactIs.isElement, throwOnDirectAccess);\n} else {\n  // By explicitly using `prop-types` you are opting into new production behavior.\n  // http://fb.me/prop-types-in-prod\n  module.exports = require('./factoryWithThrowingShims')();\n}\n","/**\n * Copyright (c) 2013-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\n'use strict';\n\nvar ReactPropTypesSecret = 'SECRET_DO_NOT_PASS_THIS_OR_YOU_WILL_BE_FIRED';\n\nmodule.exports = ReactPropTypesSecret;\n"],"names":["getContacts","state","contacts","items","getStatusFilter","filters","DynamicSort","property","a","b","toUpperCase","propTypes","FormContainer","styled","Label","Title","Input","Button","useState","name","phone","initial_state","setInitial_state","useSelector","sort","dispatch","useDispatch","handleChangeForm","event","target","value","onSubmit","preventDefault","filter","key","length","alert","newContact","number","addContact","type","pattern","title","onChange","required","setFilter","handleFilterChange","placeholder","ContactListItem","id","onRemove","onClick","handleRemoveContact","deleteContact","useEffect","fetchContacts","visibleContacts","contact","toLowerCase","includes","style","marginLeft","marginTop","map","App","refreshUser","display","minWidth","justifyContent","alignItems","fontSize","Contacts","ReactPropTypesSecret","require","emptyFunction","emptyFunctionWithReset","resetWarningCache","module","exports","shim","props","propName","componentName","location","propFullName","secret","err","Error","getShim","isRequired","ReactPropTypes","array","bigint","bool","func","object","string","symbol","any","arrayOf","element","elementType","instanceOf","node","objectOf","oneOf","oneOfType","shape","exact","checkPropTypes","PropTypes"],"sourceRoot":""}